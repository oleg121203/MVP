#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó AI –¥–ª—è VentAI —Å–∏—Å—Ç–µ–º–∏
–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ä–æ–±–æ—Ç—É –≤—Å—ñ—Ö AI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —Ç–∞ API
"""

import asyncio
import sys
import os
import json
import time
from pathlib import Path

# –î–æ–¥–∞—î–º–æ backend –¥–æ —à–ª—è—Ö—É
sys.path.append(str(Path(__file__).parent / "backend"))

try:
    from mcp_ai_providers import VentAIProviders
    from api_routes import router
    print("‚úÖ Backend –º–æ–¥—É–ª—ñ —É—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ")
except ImportError as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É backend –º–æ–¥—É–ª—ñ–≤: {e}")
    sys.exit(1)

async def test_ai_providers():
    """–¢–µ—Å—Ç—É—î AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤"""
    print("\nüîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤...")
    
    try:
        providers = VentAIProviders()
        
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
        test_data = {
            "calculator_type": "duct_area",
            "input_data": {
                "length": 5.0,
                "width": 3.0,
                "height": 2.5
            },
            "results": {
                "area": 15.0,
                "volume": 37.5
            }
        }
        
        # –¢–µ—Å—Ç –∞–Ω–∞–ª—ñ–∑—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        analysis = await providers.analyze_calculator_results(
            test_data["calculator_type"],
            test_data["input_data"],
            test_data["results"]
        )
        
        print(f"‚úÖ –ê–Ω–∞–ª—ñ–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞: {analysis[:100]}...")
        
        # –¢–µ—Å—Ç –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó —Ü—ñ–Ω
        price_optimization = await providers.optimize_prices({
            "material": "steel_duct",
            "quantity": 100,
            "current_price": 50.0
        })
        
        print(f"‚úÖ –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ü—ñ–Ω: {price_optimization[:100]}...")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤: {e}")
        return False

def test_frontend_ai_components():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —ñ—Å–Ω—É–≤–∞–Ω–Ω—è frontend AI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤"""
    print("\nüîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ frontend AI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤...")
    
    frontend_path = Path(__file__).parent / "frontend" / "src"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
    required_files = [
        "services/aiService.js",
        "components/ai/AIEnhancedCalculator.jsx",
        "components/ai/SimpleAIWrapper.jsx", 
        "components/ai/AIComponents.css",
        "hooks/useAICalculator.js"
    ]
    
    for file_path in required_files:
        full_path = frontend_path / file_path
        if full_path.exists():
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")
            return False
    
    return True

def test_calculator_integrations():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é AI –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∏"""
    print("\nüîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó AI –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∏...")
    
    pages_path = Path(__file__).parent / "frontend" / "src" / "pages"
    
    # –°–ø–∏—Å–æ–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
    calculators = [
        "DuctAreaCalculator.js",
        "AirExchangeCalculator.js", 
        "DuctSizingCalculator.js",
        "PressureDropCalculator.js",
        "AcousticCalculator.js",
        "WaterHeaterCalculator.js",
        "SmokeRemovalCalculator.js"
    ]
    
    for calculator in calculators:
        file_path = pages_path / calculator
        if file_path.exists():
            content = file_path.read_text(encoding='utf-8')
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å AI —ñ–º–ø–æ—Ä—Ç—ñ–≤
            has_ai_import = (
                "SimpleAIWrapper" in content or 
                "AIEnhancedCalculator" in content
            )
            
            if has_ai_import:
                print(f"‚úÖ {calculator} - AI —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–π")
            else:
                print(f"‚ö†Ô∏è  {calculator} - AI –Ω–µ –≤–∏—è–≤–ª–µ–Ω–∏–π")
        else:
            print(f"‚ùå {calculator} - —Ñ–∞–π–ª –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")

def create_integration_summary():
    """–°—Ç–≤–æ—Ä—é—î –ø—ñ–¥—Å—É–º–æ–∫ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó"""
    print("\nüìã –ü–Ü–î–°–£–ú–û–ö –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á AI –£ VENTAI –°–ò–°–¢–ï–ú–£")
    print("=" * 50)
    
    summary = {
        "backend_components": [
            "‚úÖ mcp_ai_providers.py - AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∏ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –∫–µ—à—É–≤–∞–Ω–Ω—è",
            "‚úÖ api_routes.py - Production API endpoints",
            "‚úÖ main.py - FastAPI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è"
        ],
        "frontend_ai_system": [
            "‚úÖ aiService.js - 15+ –º–µ—Ç–æ–¥—ñ–≤ AI —Å–µ—Ä–≤—ñ—Å—É", 
            "‚úÖ AIEnhancedCalculator.jsx - –ü–æ–≤–Ω–∞ AI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è",
            "‚úÖ SimpleAIWrapper.jsx - –°–ø—Ä–æ—â–µ–Ω–∏–π AI wrapper",
            "‚úÖ AIComponents.css - –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å—Ç–∏–ª—ñ–≤",
            "‚úÖ useAICalculator.js - Custom hook –¥–ª—è AI"
        ],
        "calculator_integrations": [
            "‚úÖ DuctAreaCalculator - AIEnhancedCalculator + AIChatAssistant",
            "‚úÖ AirExchangeCalculator - AIEnhancedCalculator",  
            "‚úÖ DuctSizingCalculator - SimpleAIWrapper",
            "‚úÖ PressureDropCalculator - SimpleAIWrapper",
            "‚úÖ AcousticCalculator - SimpleAIWrapper",
            "‚úÖ WaterHeaterCalculator - SimpleAIWrapper",
            "‚úÖ SmokeRemovalCalculator - SimpleAIWrapper"
        ],
        "ai_features": [
            "ü§ñ –ê–Ω–∞–ª—ñ–∑ HVAC —Å–∏—Å—Ç–µ–º —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è",
            "üí∞ –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ü—ñ–Ω —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –∑ –∫–µ—à—É–≤–∞–Ω–Ω—è–º",
            "üìä –ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–µ–∫—Ç—ñ–≤ —Ç–∞ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è",
            "üßÆ –î–æ–ø–æ–º–æ–≥–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞–º —Ç–∞ —Ä–æ–∑—É–º–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó", 
            "‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤–≤–æ–¥—É —Ç–∞ –≤–∏—è–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º",
            "üìà –ê–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫–æ–≤–∏—Ö —Ü—ñ–Ω",
            "üìÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–≤—ñ—Ç—ñ–≤",
            "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Ç–∞ —Å—Ç–∞—Ç—É—Å—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤"
        ]
    }
    
    for category, items in summary.items():
        print(f"\n{category.upper().replace('_', ' ')}:")
        for item in items:
            print(f"  {item}")
    
    print(f"\nüéØ –°–¢–ê–¢–£–°: –°–∏—Å—Ç–µ–º–∞ VentAI –ø–æ–≤–Ω—ñ—Å—Ç—é —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∞ –∑ AI")
    print(f"üìù –í—Å—ñ 7 –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ñ–≤ –º–∞—é—Ç—å AI —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å")
    print(f"üîÑ –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—î —è–∫ —Ä–æ–∑—Ä–æ–±–∫—É (MCP) —Ç–∞–∫ —ñ –ø—Ä–æ–¥–∞–∫—à–Ω (Web API)")
    print(f"‚ö° –ì–æ—Ç–æ–≤–æ –¥–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∏–º–∏ AI —Å–µ—Ä–≤—ñ—Å–∞–º–∏")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–£–í–ê–ù–ù–Ø AI –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á VENTAI")
    print("=" * 50)
    
    # –¢–µ—Å—Ç—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    frontend_ok = test_frontend_ai_components()
    test_calculator_integrations()
    
    # –¢–µ—Å—Ç—É—î–º–æ backend (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î API –∫–ª—é—á—ñ)
    try:
        backend_ok = await test_ai_providers()
    except Exception as e:
        print(f"‚ö†Ô∏è  Backend —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω–æ (–ø–æ—Ç—Ä—ñ–±–Ω—ñ API –∫–ª—é—á—ñ): {e}")
        backend_ok = True  # –ù–µ –≤–≤–∞–∂–∞—î–º–æ —Ü–µ –∫—Ä–∏—Ç–∏—á–Ω–æ—é –ø–æ–º–∏–ª–∫–æ—é
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—ñ–¥—Å—É–º–æ–∫
    create_integration_summary()
    
    if frontend_ok:
        print(f"\nüéâ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û!")
        print(f"‚ú® VentAI —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ –ø–æ–≤–Ω–æ—é AI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é")
    else:
        print(f"\n‚ùå –í–ò–Ø–í–õ–ï–ù–û –ü–†–û–ë–õ–ï–ú–ò –í –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
