#!/usr/bin/env python3
"""
VentAI Enterprise Autoclicker v2 - –∑ —Ä–µ–∞–ª—å–Ω–æ—é –º–∏—à–∫–æ—é
–õ–æ–≥—ñ–∫–∞:
1. –ö–æ–∂–Ω—ñ 20 —Å–µ–∫—É–Ω–¥ —Å–∫—Ä–æ–ª—ñ–Ω–≥ –¥–æ —Å–∞–º–æ–≥–æ –Ω–∏–∑—É —á–∞—Ç—É
2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ Continue –≤–Ω–∏–∑—É
3. –Ø–∫—â–æ Continue —î - –Ω–∞—Ç–∏—Å–∫–∞—î–º–æ Accept All + Continue
4. –Ø–∫—â–æ Continue –Ω–µ–º–∞—î - –∑–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –∫–∞—Ä—Ç–∏–Ω–∫—É
5. –Ø–∫—â–æ 3 –ø—ñ–¥—Ä—è–¥ –æ–¥–Ω–∞–∫–æ–≤—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏ - –∞–∫—Ç–∏–≤—É—î–º–æ VENTAI ENTERPRISE
"""

import os
import sys
import time
import signal
import pyautogui
import hashlib
from pathlib import Path
from PIL import Image
import io

# ===== –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø =====
CONFIDENCE = 0.8  # –ü—ñ–¥–≤–∏—â–µ–Ω–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å
SCROLL_INTERVAL = 20  # –ö–æ–∂–Ω—ñ 20 —Å–µ–∫—É–Ω–¥
SEQUENCE_PAUSE = 5    # –ë—ñ–ª—å—à–∞ –ø–∞—É–∑–∞ –º—ñ–∂ –∫–ª—ñ–∫–∞–º–∏
VERBOSE_LOGGING = True

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü—ñ—ó –∑–º—ñ–Ω
UNCHANGED_THRESHOLD = 3  # 3 –æ–¥–Ω–∞–∫–æ–≤—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—ñ–¥—Ä—è–¥
ACTIVATION_COMMAND = "VENTAI ENTERPRISE ACTIVATE"

# –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
script_running = True
unchanged_count = 0
last_screen_hash = None

# –®–ª—è—Ö–∏ –¥–æ –∑–æ–±—Ä–∞–∂–µ–Ω—å
script_dir = Path(__file__).parent
images_dir = script_dir / "images"
ACCEPT_ALL_BUTTON = str(images_dir / "accept_all.png")
CONTINUE_BUTTON = str(images_dir / "continue.png")

def signal_handler(signum, frame):
    global script_running
    print("\nüõë VentAI Enterprise —Å–∫—Ä–∏–ø—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")
    script_running = False
    sys.exit(0)

def check_stop_flag():
    stop_flag_path = script_dir / "stop.flag"
    if stop_flag_path.exists():
        print("üõë –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª 'stop.flag'. –ó—É–ø–∏–Ω—è—é —Å–∫—Ä–∏–ø—Ç...")
        stop_flag_path.unlink()
        return True
    return False

def validate_image_files():
    missing_files = []
    if not os.path.exists(ACCEPT_ALL_BUTTON):
        missing_files.append(ACCEPT_ALL_BUTTON)
    if not os.path.exists(CONTINUE_BUTTON):
        missing_files.append(CONTINUE_BUTTON)
    
    if missing_files:
        print("‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ —Ñ–∞–π–ª–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å:")
        for file in missing_files:
            print(f"   - {file}")
        return False
    
    print("‚úÖ –§–∞–π–ª–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑–Ω–∞–π–¥–µ–Ω–æ:")
    print(f"   - {ACCEPT_ALL_BUTTON}")
    print(f"   - {CONTINUE_BUTTON}")
    return True

def scroll_to_bottom():
    """–°–∫—Ä–æ–ª—ñ–Ω–≥ –¥–æ —Å–∞–º–æ–≥–æ –Ω–∏–∑—É —á–∞—Ç—É."""
    try:
        print("üìú –°–∫—Ä–æ–ª—ñ–Ω–≥ –¥–æ –Ω–∏–∑—É —á–∞—Ç—É...")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–∑–º—ñ—Ä–∏ –µ–∫—Ä–∞–Ω—É
        screen_width, screen_height = pyautogui.size()
        
        # –ü–†–ê–í–ê –ß–ê–°–¢–ò–ù–ê –ï–ö–†–ê–ù–£ - –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —á–∞—Ç
        chat_x = screen_width * 3 // 4  # 3/4 –≤—ñ–¥ –ª—ñ–≤–æ–≥–æ –∫—Ä–∞—é (–ø—Ä–∞–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞)
        chat_y = screen_height // 2  # –¶–µ–Ω—Ç—Ä –ø–æ –≤–∏—Å–æ—Ç—ñ
        
        print(f"üñ±Ô∏è –ü–µ—Ä–µ–º—ñ—â—É—é –º–∏—à–∫—É –≤ –ü–†–ê–í–£ —á–∞—Å—Ç–∏–Ω—É —á–∞—Ç—É ({chat_x}, {chat_y})")
        pyautogui.moveTo(chat_x, chat_y, duration=1.5)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–µ
        time.sleep(1)  # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–∞—É–∑–∞
        
        # –ö—ñ–ª—å–∫–∞ —Å–∫—Ä–æ–ª—ñ–≤ –≤–Ω–∏–∑ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç—ñ—ó
        print("üìú –í–∏–∫–æ–Ω—É—é —Å–∫—Ä–æ–ª—ñ–Ω–≥...")
        for i in range(15):  # –ë—ñ–ª—å—à–µ —Å–∫—Ä–æ–ª—ñ–≤
            pyautogui.scroll(-10)  # –ë—ñ–ª—å—à–∏–π —Å–∫—Ä–æ–ª –≤–Ω–∏–∑
            time.sleep(0.3)  # –ë—ñ–ª—å—à–∞ –ø–∞—É–∑–∞ –º—ñ–∂ —Å–∫—Ä–æ–ª–∞–º–∏
            if i % 5 == 0:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å
                print(f"   –°–∫—Ä–æ–ª {i+1}/15")
        
        print("‚úÖ –°–∫—Ä–æ–ª—ñ–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        time.sleep(2)  # –î–æ–≤—à–∞ –ø–∞—É–∑–∞ –ø—ñ—Å–ª—è —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∫—Ä–æ–ª—ñ–Ω–≥—É: {e}")

def get_bottom_chat_hash():
    """–û—Ç—Ä–∏–º—É—î —Ö–µ—à –Ω–∏–∂–Ω—å–æ—ó —á–∞—Å—Ç–∏–Ω–∏ —á–∞—Ç—É –¥–ª—è –¥–µ—Ç–µ–∫—Ü—ñ—ó –∑–º—ñ–Ω."""
    try:
        screen_width, screen_height = pyautogui.size()
        
        # –ü–†–ê–í–ê —á–∞—Å—Ç–∏–Ω–∞ —á–∞—Ç—É (–Ω–∏–∂–Ω—è –æ–±–ª–∞—Å—Ç—å)
        bottom_area_x = screen_width // 2  # –í—ñ–¥ –ø–æ–ª–æ–≤–∏–Ω–∏ –µ–∫—Ä–∞–Ω—É (–ø—Ä–∞–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞)
        bottom_area_y = screen_height - 400  # –û—Å—Ç–∞–Ω–Ω—ñ 400 –ø—ñ–∫—Å–µ–ª—ñ–≤
        bottom_area_width = screen_width // 2  # –ü—Ä–∞–≤–∞ –ø–æ–ª–æ–≤–∏–Ω–∞ –µ–∫—Ä–∞–Ω—É
        bottom_area_height = 300  # –í–∏—Å–æ—Ç–∞ –æ–±–ª–∞—Å—Ç—ñ
        
        # –†–æ–±–∏–º–æ —Å–∫—Ä—ñ–Ω—à–æ—Ç –ü–†–ê–í–û–á –Ω–∏–∂–Ω—å–æ—ó —á–∞—Å—Ç–∏–Ω–∏
        bottom_area = pyautogui.screenshot(region=(bottom_area_x, bottom_area_y, bottom_area_width, bottom_area_height))
        
        # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ —Å—ñ—Ä–∏–π –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ
        import numpy as np
        gray_array = np.array(bottom_area.convert('L'))
        
        # –†–æ–±–∏–º–æ —Ö–µ—à
        img_hash = hashlib.md5(gray_array.tobytes()).hexdigest()
        
        return img_hash
    except Exception as e:
        if VERBOSE_LOGGING:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ö–µ—à—É: {e}")
        return None

def check_for_continue_button():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ Continue –≤ –Ω–∏–∂–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ –µ–∫—Ä–∞–Ω—É."""
    try:
        screen_width, screen_height = pyautogui.size()
        
        # –®—É–∫–∞—î–º–æ Continue —Ç—ñ–ª—å–∫–∏ –≤ –ü–†–ê–í–Ü–ô –Ω–∏–∂–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ –µ–∫—Ä–∞–Ω—É
        bottom_region = (screen_width // 2, screen_height - 400, screen_width // 2, 400)  # –ü—Ä–∞–≤–∞ –ø–æ–ª–æ–≤–∏–Ω–∞
        
        continue_location = pyautogui.locateOnScreen(
            CONTINUE_BUTTON, 
            confidence=CONFIDENCE,
            region=bottom_region
        )
        
        if continue_location:
            continue_center = pyautogui.center(continue_location)
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ 'Continue' –≤–Ω–∏–∑—É: {continue_location}")
            return {
                'location': continue_location,
                'center': continue_center
            }
        
        return None
        
    except pyautogui.ImageNotFoundException:
        return None
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É Continue: {e}")
        return None

def find_accept_all_button():
    """–®—É–∫–∞—î –∫–Ω–æ–ø–∫—É Accept All –ø–æ –≤—Å—å–æ–º—É –µ–∫—Ä–∞–Ω—É."""
    try:
        accept_location = pyautogui.locateOnScreen(ACCEPT_ALL_BUTTON, confidence=CONFIDENCE)
        if accept_location:
            accept_center = pyautogui.center(accept_location)
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ 'Accept all': {accept_location}")
            return {
                'location': accept_location,
                'center': accept_center
            }
        return None
    except pyautogui.ImageNotFoundException:
        return None
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É Accept All: {e}")
        return None

def click_button(button_data, button_name):
    """–ö–ª—ñ–∫ –ø–æ –∫–Ω–æ–ø—Ü—ñ –∑ —Ä–µ–∞–ª—å–Ω–∏–º —Ä—É—Ö–æ–º –º–∏—à—ñ."""
    try:
        center = button_data['center']
        print(f"üñ±Ô∏è –ü–µ—Ä–µ–º—ñ—â—É—é –º–∏—à–∫—É –¥–æ '{button_name}' –≤ {center}")
        
        # –ü–û–í–Ü–õ–¨–ù–ò–ô —Ä–µ–∞–ª—å–Ω–∏–π —Ä—É—Ö –º–∏—à—ñ
        pyautogui.moveTo(center.x, center.y, duration=1.5)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–µ
        time.sleep(1)  # –î–æ–≤—à–∞ –ø–∞—É–∑–∞
        
        # –ü–æ–≤—ñ–ª—å–Ω–∏–π –∫–ª—ñ–∫
        print(f"üëÜ –í–∏–∫–æ–Ω—É—é –∫–ª—ñ–∫ –ø–æ '{button_name}'...")
        pyautogui.click(duration=0.5)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–∏–π –∫–ª—ñ–∫
        print(f"‚úÖ –ö–ª—ñ–∫ –ø–æ '{button_name}' –≤–∏–∫–æ–Ω–∞–Ω–æ")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É
        return True
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–ª—ñ–∫—É {button_name}: {e}")
        return False

def find_chat_input_field():
    """–ó–Ω–∞—Ö–æ–¥–∏—Ç—å —ñ –∞–∫—Ç–∏–≤—É—î –ø–æ–ª–µ –≤–≤–æ–¥—É —á–∞—Ç—É."""
    try:
        screen_width, screen_height = pyautogui.size()
        
        # –ú–æ–∂–ª–∏–≤—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –ø–æ–ª—è –≤–≤–æ–¥—É –≤ –ü–†–ê–í–Ü–ô —á–∞—Å—Ç–∏–Ω—ñ (–¥–µ —á–∞—Ç)
        possible_inputs = [
            (screen_width * 3 // 4, screen_height - 100),     # 3/4 –≤—ñ–¥ –ª—ñ–≤–æ–≥–æ –∫—Ä–∞—é (–ø—Ä–∞–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞)
            (screen_width * 3 // 4, screen_height - 150),     # 3/4 –≤—ñ–¥ –ª—ñ–≤–æ–≥–æ –∫—Ä–∞—é (–ø—Ä–∞–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞)
            (screen_width * 5 // 6, screen_height - 80),      # 5/6 –≤—ñ–¥ –ª—ñ–≤–æ–≥–æ –∫—Ä–∞—é (–ø—Ä–∞–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞)
            (screen_width * 2 // 3, screen_height - 120),     # 2/3 –≤—ñ–¥ –ª—ñ–≤–æ–≥–æ –∫—Ä–∞—é (–ø—Ä–∞–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞)
        ]
        
        for x, y in possible_inputs:
            try:
                print(f"üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –ø–æ–ª–µ –≤–≤–æ–¥—É –≤ {x}, {y}")
                
                # –ü–û–í–Ü–õ–¨–ù–ò–ô —Ä—É—Ö –º–∏—à—ñ
                pyautogui.moveTo(x, y, duration=1.5)
                time.sleep(1)
                
                # –ü–æ–≤—ñ–ª—å–Ω–∏–π –∫–ª—ñ–∫
                pyautogui.click(duration=0.5)
                time.sleep(2)  # –î–æ–≤—à–∞ –ø–∞—É–∑–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
                
                # –¢–µ—Å—Ç—É—î–º–æ –ø–æ–ª–µ –ø–æ–≤—ñ–ª—å–Ω–æ
                print("‚úèÔ∏è –¢–µ—Å—Ç—É—é –ø–æ–ª–µ –≤–≤–æ–¥—É...")
                pyautogui.typewrite("GO ", interval=0.2)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–µ –Ω–∞–±–∏—Ä–∞–Ω–Ω—è
                time.sleep(1)
                pyautogui.hotkey('cmd', 'a')  # macOS: cmd+a
                time.sleep(0.5)
                pyautogui.press('backspace')
                time.sleep(0.5)
                
                print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–µ –ø–æ–ª–µ –≤–≤–æ–¥—É –≤ {x}, {y}")
                return (x, y)
            except Exception as inner_e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ –≤ {x}, {y} –Ω–µ –ø—Ä–∞—Ü—é—î: {inner_e}")
                continue
        
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –ø–æ–ª–µ –≤–≤–æ–¥—É")
        return None
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É –ø–æ–ª—è –≤–≤–æ–¥—É: {e}")
        return None

def activate_ventai_enterprise():
    """–ê–∫—Ç–∏–≤—É—î VentAI Enterprise —á–µ—Ä–µ–∑ –ø–æ–ª–µ –≤–≤–æ–¥—É."""
    try:
        print("\nüöÄ –ê–ö–¢–ò–í–ê–¶–Ü–Ø VENTAI ENTERPRISE")
        print("===============================")
        
        # 1. –ù–∞—Ç–∏—Å–∫–∞—î–º–æ Escape
        print("1Ô∏è‚É£ –ù–∞—Ç–∏—Å–∫–∞—é Escape...")
        pyautogui.press('escape')
        time.sleep(1)
        
        # 2. –®—É–∫–∞—î–º–æ —ñ –Ω–∞—Ç–∏—Å–∫–∞—î–º–æ Accept All
        print("2Ô∏è‚É£ –®—É–∫–∞—é Accept All...")
        accept_button = find_accept_all_button()
        if accept_button:
            if click_button(accept_button, 'Accept All'):
                time.sleep(2)
            else:
                print("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ Accept All")
        else:
            print("‚ö†Ô∏è Accept All –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        
        # 3. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ–ª–µ –≤–≤–æ–¥—É
        print("3Ô∏è‚É£ –®—É–∫–∞—é –ø–æ–ª–µ –≤–≤–æ–¥—É —á–∞—Ç—É...")
        chat_input = find_chat_input_field()
        
        if chat_input:
            x, y = chat_input
            
            # 4. –ê–∫—Ç–∏–≤—É—î–º–æ –ø–æ–ª–µ –≤–≤–æ–¥—É
            print("4Ô∏è‚É£ –ê–∫—Ç–∏–≤—É—é –ø–æ–ª–µ –≤–≤–æ–¥—É...")
            pyautogui.moveTo(x, y, duration=1.5)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–µ
            time.sleep(1)
            pyautogui.click(duration=0.5)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–∏–π –∫–ª—ñ–∫
            time.sleep(2)  # –î–æ–≤—à–∞ –ø–∞—É–∑–∞
            
            # 5. –û—á–∏—â–∞—î–º–æ —ñ –≤–≤–æ–¥–∏–º–æ –∫–æ–º–∞–Ω–¥—É
            print("5Ô∏è‚É£ –í–≤–æ–¥–∂—É –∫–æ–º–∞–Ω–¥—É –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó...")
            pyautogui.hotkey('cmd', 'a')  # macOS: cmd+a –¥–ª—è –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ
            time.sleep(0.5)
            pyautogui.press('backspace')
            time.sleep(1)  # –ü–∞—É–∑–∞ –ø—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è
            
            # –í–≤–æ–¥–∏–º–æ –∫–æ–º–∞–Ω–¥—É –ü–û–í–Ü–õ–¨–ù–û
            print(f"‚úèÔ∏è –ù–∞–±–∏—Ä–∞—é: {ACTIVATION_COMMAND}")
            pyautogui.typewrite(ACTIVATION_COMMAND, interval=0.1)  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–µ –Ω–∞–±–∏—Ä–∞–Ω–Ω—è
            time.sleep(2)  # –ü–∞—É–∑–∞ –ø—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è
            
            # 6. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥–æ—é CMD+ENTER
            print("6Ô∏è‚É£ –í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É (CMD+ENTER)...")
            pyautogui.hotkey('cmd', 'enter')  # macOS: cmd+enter
            time.sleep(1)
            
            print("‚úÖ VENTAI ENTERPRISE –ê–ö–¢–ò–í–û–í–ê–ù–û!")
            print(f"üìù –ö–æ–º–∞–Ω–¥–∞: {ACTIVATION_COMMAND}")
            return True
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –ø–æ–ª–µ –≤–≤–æ–¥—É")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: {e}")
        return False

def execute_continue_sequence():
    """–í–∏–∫–æ–Ω—É—î –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å Accept All + Continue."""
    try:
        print("\n‚ö° –ü–û–°–õ–Ü–î–û–í–ù–Ü–°–¢–¨: Accept All + Continue")
        print("=====================================")
        
        # 1. –®—É–∫–∞—î–º–æ Accept All
        print("1Ô∏è‚É£ –®—É–∫–∞—é Accept All...")
        accept_button = find_accept_all_button()
        if not accept_button:
            print("‚ùå Accept All –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        # 2. –ö–ª—ñ–∫ Accept All
        print("2Ô∏è‚É£ –ö–ª—ñ–∫ Accept All...")
        if not click_button(accept_button, 'Accept All'):
            return False
        
        # 3. –ü–∞—É–∑–∞
        print(f"‚è≥ –ü–∞—É–∑–∞ {SEQUENCE_PAUSE}—Å...")
        time.sleep(SEQUENCE_PAUSE)
        
        # 4. –®—É–∫–∞—î–º–æ Continue –∑–Ω–æ–≤—É
        print("4Ô∏è‚É£ –®—É–∫–∞—é Continue –ø—ñ—Å–ª—è Accept All...")
        time.sleep(1)  # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–∞—É–∑–∞
        continue_button = check_for_continue_button()
        if not continue_button:
            print("‚ö†Ô∏è Continue –∑–Ω–∏–∫ –ø—ñ—Å–ª—è Accept All (—Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
            return True  # –¶–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        
        # 5. –ö–ª—ñ–∫ Continue
        print("5Ô∏è‚É£ –ö–ª—ñ–∫ Continue...")
        if not click_button(continue_button, 'Continue'):
            return False
        
        print("‚úÖ –ü–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ: {e}")
        return False

def check_screen_changes():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –∑–º—ñ–Ω–∏ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ —ñ –≤–µ–¥–µ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –æ–¥–Ω–∞–∫–æ–≤–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫."""
    global last_screen_hash, unchanged_count
    
    current_hash = get_bottom_chat_hash()
    if current_hash is None:
        return False
    
    if last_screen_hash is None:
        last_screen_hash = current_hash
        unchanged_count = 1
        print(f"üì∏ –ü–µ—Ä—à–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∞")
        return False
    
    if current_hash == last_screen_hash:
        unchanged_count += 1
        print(f"üîÑ –ö–∞—Ä—Ç–∏–Ω–∫–∞ #{unchanged_count} - –ë–ï–ó –ó–ú–Ü–ù")
        
        if unchanged_count >= UNCHANGED_THRESHOLD:
            print(f"üéØ –¢–†–ò–ì–ï–†: {UNCHANGED_THRESHOLD} –æ–¥–Ω–∞–∫–æ–≤—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—ñ–¥—Ä—è–¥!")
            return True
    else:
        unchanged_count = 1
        last_screen_hash = current_hash
        print(f"‚ú® –ù–æ–≤–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤–∏—è–≤–ª–µ–Ω–∞, –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Å–∫–∏–Ω—É—Ç–æ")
    
    return False

def main_loop():
    """–û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª —Å–∫—Ä–∏–ø—Ç–∞."""
    global script_running, unchanged_count
    
    print("üöÄ VENTAI ENTERPRISE v2 –∑–∞–ø—É—â–µ–Ω–æ!")
    print("üñ±Ô∏è –†–µ–∞–ª—å–Ω–∞ –º–∏—à–∫–∞")
    print("üìú –°–∫—Ä–æ–ª—ñ–Ω–≥ –∫–æ–∂–Ω—ñ 20 —Å–µ–∫—É–Ω–¥")
    print("üéØ –ê–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü—ñ—è –ø—ñ—Å–ª—è 3 –æ–¥–Ω–∞–∫–æ–≤–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫")
    print("üí° –î–ª—è –∑—É–ø–∏–Ω–∫–∏: Ctrl+C –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å stop.flag\n")
    
    cycle = 0
    
    while script_running:
        try:
            cycle += 1
            print(f"\nüîç –¶–∏–∫–ª #{cycle}")
            print("=" * 40)
            
            if check_stop_flag():
                break
            
            # 1. –°–∫—Ä–æ–ª—ñ–Ω–≥ –¥–æ –Ω–∏–∑—É
            scroll_to_bottom()
            
            # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ Continue
            print("üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Continue...")
            continue_button = check_for_continue_button()
            
            if continue_button:
                print("‚úÖ Continue –∑–Ω–∞–π–¥–µ–Ω–æ!")
                # –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—ñ Continue
                unchanged_count = 0
                last_screen_hash = None
                
                # –í–∏–∫–æ–Ω—É—î–º–æ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å
                if execute_continue_sequence():
                    print("‚è∞ –ü–∞—É–∑–∞ 30 —Å–µ–∫—É–Ω–¥ –ø—ñ—Å–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ...")
                    time.sleep(30)
                else:
                    time.sleep(10)
            else:
                print("‚ùå Continue –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
                
                # 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–∏ —ñ –ª—ñ—á–∏–º–æ –æ–¥–Ω–∞–∫–æ–≤—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏
                print("üì∏ –ü–µ—Ä–µ–≤—ñ—Ä—è—é –∑–º—ñ–Ω–∏ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ...")
                should_activate = check_screen_changes()
                
                if should_activate:
                    print("üéØ –£–ú–û–í–ê –ê–ö–¢–ò–í–ê–¶–Ü–á –í–ò–ö–û–ù–ê–ù–ê!")
                    if activate_ventai_enterprise():
                        # –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
                        unchanged_count = 0
                        last_screen_hash = None
                        print("‚è∞ –ü–∞—É–∑–∞ 60 —Å–µ–∫—É–Ω–¥ –ø—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó...")
                        time.sleep(60)
                    else:
                        time.sleep(10)
                else:
                    print(f"‚è≥ –ß–µ–∫–∞—é –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ü–∏–∫–ª—É ({SCROLL_INTERVAL}—Å)...")
                    time.sleep(SCROLL_INTERVAL)
                
        except KeyboardInterrupt:
            print("\nüõë VentAI Enterprise –∑—É–ø–∏–Ω–µ–Ω–æ (Ctrl+C)")
            break
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
            time.sleep(10)

def main():
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PyAutoGUI –¥–ª—è macOS
    pyautogui.FAILSAFE = True
    pyautogui.PAUSE = 0.5  # –ë—ñ–ª—å—à–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞ –ø–∞—É–∑–∞ –º—ñ–∂ –∫–æ–º–∞–Ω–¥–∞–º–∏
    
    try:
        if not validate_image_files():
            return False
        
        print("üéØ VENTAI ENTERPRISE v2 MODE:")
        print("‚Ä¢ –†–µ–∞–ª—å–Ω–∞ –º–∏—à–∫–∞")
        print("‚Ä¢ –°–∫—Ä–æ–ª—ñ–Ω–≥ –∫–æ–∂–Ω—ñ 20—Å")
        print("‚Ä¢ –î–µ—Ç–µ–∫—Ü—ñ—è Continue")
        print("‚Ä¢ –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∑–º—ñ–Ω")
        print("‚Ä¢ macOS –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è\n")
        
        main_loop()
        
        print("‚úÖ VentAI Enterprise –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
