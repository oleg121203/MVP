#!/usr/bin/env python3
"""
VentAI Enterprise Autoclicker - DEMO VERSION (—à–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç)
–¢–µ—Å—Ç–æ–≤–∞ –≤–µ—Ä—Å—ñ—è –∑ –∫–æ—Ä–æ—Ç–∫–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º 10 —Å–µ–∫—É–Ω–¥ –∑–∞–º—ñ—Å—Ç—å 60
"""

import os
import sys
import time
import signal
import pyautogui
import hashlib
from pathlib import Path
from PIL import Image
import io

# ===== DEMO –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø =====
CONFIDENCE = 0.7
NORMAL_PAUSE = 5  # –ö–æ—Ä–æ—Ç—à–∞ –ø–∞—É–∑–∞ –¥–ª—è –¥–µ–º–æ
AFTER_CLICK_PAUSE = 30  # –ö–æ—Ä–æ—Ç—à–∞ –ø–∞—É–∑–∞ –ø—ñ—Å–ª—è –∫–ª—ñ–∫—ñ–≤
SEQUENCE_PAUSE = 2  # –ö–æ—Ä–æ—Ç—à–∞ –ø–∞—É–∑–∞ –º—ñ–∂ –∫–ª—ñ–∫–∞–º–∏
VERBOSE_LOGGING = True

# DEMO –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - –®–í–ò–î–ö–ò–ô –¢–ï–°–¢
INACTIVITY_TIMEOUT = 10  # 10 —Å–µ–∫—É–Ω–¥ –∑–∞–º—ñ—Å—Ç—å 60 –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
ACTIVATION_COMMAND = "VENTAI ENTERPRISE ACTIVATE"
SCREEN_CHECK_INTERVAL = 2  # –ß–∞—Å—Ç—ñ—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è –¥–µ–º–æ

# –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
last_button_coordinates = {}
script_running = True
last_screen_hash = None
last_activity_time = time.time()
activation_attempted = False

# –®–ª—è—Ö–∏ –¥–æ –∑–æ–±—Ä–∞–∂–µ–Ω—å
script_dir = Path(__file__).parent
images_dir = script_dir / "images"
ACCEPT_ALL_BUTTON = str(images_dir / "accept_all.png")
CONTINUE_BUTTON = str(images_dir / "continue.png")

def signal_handler(signum, frame):
    global script_running
    print("\nüõë VentAI Enterprise DEMO –∑—É–ø–∏–Ω–µ–Ω–æ.")
    script_running = False
    sys.exit(0)

def check_stop_flag():
    stop_flag_path = script_dir / "stop.flag"
    if stop_flag_path.exists():
        print("üõë –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª 'stop.flag'. –ó—É–ø–∏–Ω—è—é —Å–∫—Ä–∏–ø—Ç...")
        stop_flag_path.unlink()
        return True
    return False

def validate_image_files():
    missing_files = []
    if not os.path.exists(ACCEPT_ALL_BUTTON):
        missing_files.append(ACCEPT_ALL_BUTTON)
    if not os.path.exists(CONTINUE_BUTTON):
        missing_files.append(CONTINUE_BUTTON)
    
    if missing_files:
        print("‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ —Ñ–∞–π–ª–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å:")
        for file in missing_files:
            print(f"   - {file}")
        return False
    
    print("‚úÖ –§–∞–π–ª–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑–Ω–∞–π–¥–µ–Ω–æ:")
    print(f"   - {ACCEPT_ALL_BUTTON}")
    print(f"   - {CONTINUE_BUTTON}")
    return True

def activate_ventai_enterprise():
    """DEMO –∞–∫—Ç–∏–≤–∞—Ü—ñ—è VentAI Enterprise."""
    global activation_attempted
    
    if activation_attempted:
        print("‚ö†Ô∏è –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –≤–∂–µ –±—É–ª–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞ –≤ —Ü—ñ–π —Å–µ—Å—ñ—ó")
        return False
    
    print("\nüöÄ DEMO –ê–ö–¢–ò–í–ê–¶–Ü–Ø VENTAI ENTERPRISE")
    print("===================================")
    
    try:
        # 1. –ù–∞—Ç–∏—Å–∫–∞—î–º–æ Escape
        print("1Ô∏è‚É£ –ù–∞—Ç–∏—Å–∫–∞—é Escape...")
        pyautogui.press('escape')
        time.sleep(1)
        
        # 2. –®—É–∫–∞—î–º–æ Accept All
        print("2Ô∏è‚É£ –®—É–∫–∞—é –∫–Ω–æ–ø–∫—É Accept All...")
        try:
            accept_location = pyautogui.locateOnScreen(ACCEPT_ALL_BUTTON, confidence=CONFIDENCE)
            if accept_location:
                accept_center = pyautogui.center(accept_location)
                pyautogui.click(accept_center.x, accept_center.y, duration=0.1)
                print(f"‚úÖ –ù–∞—Ç–∏—Å–Ω—É—Ç–æ Accept All –≤ {accept_center}")
                time.sleep(1)
            else:
                print("‚ö†Ô∏è Accept All –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        except pyautogui.ImageNotFoundException:
            print("‚ö†Ô∏è Accept All –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        
        # 3. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ–ª–µ —á–∞—Ç—É —Ç–∞ –≤–≤–æ–¥–∏–º–æ –∫–æ–º–∞–Ω–¥—É
        print("3Ô∏è‚É£ –®—É–∫–∞—é –ø–æ–ª–µ –≤–≤–æ–¥—É...")
        screen_width, screen_height = pyautogui.size()
        
        # –ü—Ä–æ–±—É—î–º–æ —Ü–µ–Ω—Ç—Ä –≤–Ω–∏–∑—É –µ–∫—Ä–∞–Ω—É
        chat_x = screen_width // 2
        chat_y = screen_height - 100
        
        print(f"4Ô∏è‚É£ –ö–ª—ñ–∫–∞–Ω—é –Ω–∞ –ø–æ–ª–µ —á–∞—Ç—É ({chat_x}, {chat_y})...")
        pyautogui.click(chat_x, chat_y, duration=0.1)
        time.sleep(1)
        
        # 5. –û—á–∏—â–∞—î–º–æ —Ç–∞ –≤–≤–æ–¥–∏–º–æ –∫–æ–º–∞–Ω–¥—É
        print("5Ô∏è‚É£ –í–≤–æ–¥–∂—É DEMO –∫–æ–º–∞–Ω–¥—É...")
        pyautogui.hotkey('cmd', 'a')  # –î–ª—è macOS
        pyautogui.press('backspace')
        time.sleep(0.5)
        
        # –í–≤–æ–¥–∏–º–æ –∫–æ–º–∞–Ω–¥—É
        print(f"üìù –ö–æ–º–∞–Ω–¥–∞: {ACTIVATION_COMMAND}")
        pyautogui.typewrite(ACTIVATION_COMMAND, interval=0.1)
        time.sleep(1)
        
        # 6. –ù–∞—Ç–∏—Å–∫–∞—î–º–æ Enter
        print("6Ô∏è‚É£ –í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É (Enter)...")
        pyautogui.press('enter')
        
        print("‚úÖ DEMO –ê–ö–¢–ò–í–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        activation_attempted = True
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ DEMO –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: {e}")
        return False

def main_demo_loop():
    """DEMO —Ü–∏–∫–ª –∑ —à–≤–∏–¥–∫–∏–º —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è–º."""
    global script_running, last_activity_time
    
    print("üöÄ VENTAI ENTERPRISE DEMO –∑–∞–ø—É—â–µ–Ω–æ!")
    print("üéØ –®–í–ò–î–ö–ò–ô –¢–ï–°–¢ - –∞–∫—Ç–∏–≤–∞—Ü—ñ—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥!")
    print("üñ±Ô∏è –ú–∏—à–∞ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –í–Ü–õ–¨–ù–û–Æ")
    print("üí° –î–ª—è –∑—É–ø–∏–Ω–∫–∏: Ctrl+C\n")
    
    cycle = 0
    
    while script_running:
        try:
            cycle += 1
            current_time = time.time()
            
            if check_stop_flag():
                break
            
            print(f"üîç DEMO –¶–∏–∫–ª #{cycle}...")
            
            # –®—É–∫–∞—î–º–æ –∫–Ω–æ–ø–∫–∏
            try:
                accept_location = pyautogui.locateOnScreen(ACCEPT_ALL_BUTTON, confidence=CONFIDENCE)
                continue_location = pyautogui.locateOnScreen(CONTINUE_BUTTON, confidence=CONFIDENCE)
                
                if accept_location and continue_location:
                    print("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –û–ë–Ü –∫–Ω–æ–ø–∫–∏ - –≤–∏–∫–æ–Ω—É—é –∫–ª—ñ–∫–∏...")
                    
                    # Accept All
                    accept_center = pyautogui.center(accept_location)
                    pyautogui.click(accept_center.x, accept_center.y, duration=0.1)
                    print(f"‚ö° –ö–ª—ñ–∫ Accept All: {accept_center}")
                    time.sleep(SEQUENCE_PAUSE)
                    
                    # Continue
                    continue_center = pyautogui.center(continue_location)
                    pyautogui.click(continue_center.x, continue_center.y, duration=0.1)
                    print(f"‚ö° –ö–ª—ñ–∫ Continue: {continue_center}")
                    
                    last_activity_time = current_time
                    print(f"‚è∞ –ü–∞—É–∑–∞ {AFTER_CLICK_PAUSE}—Å –ø—ñ—Å–ª—è –∫–ª—ñ–∫—ñ–≤...")
                    time.sleep(AFTER_CLICK_PAUSE)
                    
                else:
                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
                    inactive_time = current_time - last_activity_time
                    
                    if inactive_time >= INACTIVITY_TIMEOUT and not activation_attempted:
                        print(f"\n‚è∞ DEMO –ù–ï–ê–ö–¢–ò–í–ù–Ü–°–¢–¨ {inactive_time:.0f}—Å (>{INACTIVITY_TIMEOUT}—Å)")
                        print("üéØ –î–ï–ú–û —É–º–æ–≤–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ - –∞–∫—Ç–∏–≤—É—é VentAI Enterprise!")
                        
                        if activate_ventai_enterprise():
                            print(f"‚è∞ –ü–∞—É–∑–∞ {AFTER_CLICK_PAUSE}—Å –ø—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó...")
                            time.sleep(AFTER_CLICK_PAUSE)
                            last_activity_time = current_time
                        else:
                            time.sleep(NORMAL_PAUSE)
                    else:
                        missing = []
                        if not accept_location:
                            missing.append("Accept All")
                        if not continue_location:
                            missing.append("Continue")
                        
                        print(f"‚è≥ DEMO –æ—á—ñ–∫—É—é: {', '.join(missing)} (–Ω–µ–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {inactive_time:.0f}—Å/{INACTIVITY_TIMEOUT}—Å)")
                        time.sleep(NORMAL_PAUSE)
                        
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É: {e}")
                time.sleep(NORMAL_PAUSE)
                
        except KeyboardInterrupt:
            print("\nüõë DEMO –∑—É–ø–∏–Ω–µ–Ω–æ (Ctrl+C)")
            break
        except Exception as e:
            print(f"‚ùå DEMO –ø–æ–º–∏–ª–∫–∞: {e}")
            time.sleep(NORMAL_PAUSE)

def main():
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # DEMO –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PyAutoGUI
    pyautogui.FAILSAFE = True
    pyautogui.PAUSE = 0.1
    
    try:
        if not validate_image_files():
            return False
        
        print("üéØ VENTAI ENTERPRISE DEMO MODE:")
        print("‚Ä¢ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç (10—Å –∑–∞–º—ñ—Å—Ç—å 60—Å)")
        print("‚Ä¢ –ë–µ–∑ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏")
        print("‚Ä¢ –¢—ñ–ª—å–∫–∏ —à–≤–∏–¥–∫—ñ –∫–ª—ñ–∫–∏")
        print("‚Ä¢ –î–µ–º–æ –∞–∫—Ç–∏–≤–∞—Ü—ñ—è VentAI Enterprise\n")
        
        main_demo_loop()
        
        print("‚úÖ VentAI Enterprise DEMO –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        return True
        
    except Exception as e:
        print(f"‚ùå DEMO –ø–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
