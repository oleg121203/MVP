#!/bin/bash

# üöÄ Windsurf AI Integration Quick Start
# –®–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó Windsurf AI –¥–ª—è VentAI

set -e

echo "üåä === WINDSURF AI INTEGRATION QUICK START ==="
echo ""

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
if [[ ! -d ".windsurf/server" ]]; then
    echo -e "${RED}‚ùå Error: Please run from VentAI root directory${NC}"
    exit 1
fi

echo -e "${BLUE}üîç Step 1: Checking Windsurf server...${NC}"
cd .windsurf/server

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
if [[ ! -d "node_modules" ]]; then
    echo -e "${YELLOW}üì¶ Installing dependencies...${NC}"
    npm install
fi

# –ó–±—ñ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç—É
echo -e "${BLUE}üî® Step 2: Building Windsurf server...${NC}"
npm run build

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π HTTP —Å–µ—Ä–≤–µ—Ä
echo -e "${BLUE}üåê Step 3: Checking HTTP server status...${NC}"
if curl -s http://localhost:8001/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ HTTP server is already running${NC}"
else
    echo -e "${YELLOW}üöÄ Starting HTTP MCP server...${NC}"
    npm run start:http &
    sleep 3
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ø—É—Å–∫—É
    if curl -s http://localhost:8001/health > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ HTTP server started successfully${NC}"
    else
        echo -e "${RED}‚ùå Failed to start HTTP server${NC}"
        exit 1
    fi
fi

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
echo -e "${BLUE}üß™ Step 4: Testing Windsurf integration...${NC}"

# Test 1: Health check
echo -n "   Health check: "
if curl -s http://localhost:8001/health | jq -r '.status' | grep -q "ok"; then
    echo -e "${GREEN}‚úÖ PASS${NC}"
else
    echo -e "${RED}‚ùå FAIL${NC}"
    exit 1
fi

# Test 2: Providers check
echo -n "   Providers count: "
PROVIDERS_COUNT=$(curl -s -X POST http://localhost:8001/mcp/call-tool \
    -H "Content-Type: application/json" \
    -d '{"tool": "list_ai_providers", "params": {}}' | \
    jq -r '.content[0].text' | jq -r '.total')

if [[ "$PROVIDERS_COUNT" == "6" ]]; then
    echo -e "${GREEN}‚úÖ 6/6 providers${NC}"
else
    echo -e "${RED}‚ùå Expected 6, got $PROVIDERS_COUNT${NC}"
    exit 1
fi

# Test 3: Models count  
echo -n "   Models count: "
MODELS_COUNT=$(curl -s -X POST http://localhost:8001/mcp/call-tool \
    -H "Content-Type: application/json" \
    -d '{"tool": "list_ai_providers", "params": {}}' | \
    jq -r '.content[0].text' | jq -r '.total_models')

if [[ "$MODELS_COUNT" == "11" ]]; then
    echo -e "${GREEN}‚úÖ 11/11 models${NC}"
else
    echo -e "${RED}‚ùå Expected 11, got $MODELS_COUNT${NC}"
    exit 1
fi

# Test 4: AI Chat
echo -n "   AI Chat test: "
AI_RESPONSE=$(curl -s -X POST http://localhost:8001/mcp/call-tool \
    -H "Content-Type: application/json" \
    -d '{
        "tool": "ai_chat_completion",
        "params": {
            "messages": [{"role": "user", "content": "Test"}],
            "provider": "windsurf",
            "model": "windsurf-swe-1"
        }
    }' | jq -r '.content[0].text' | jq -r '.response' | wc -c)

if [[ $AI_RESPONSE -gt 10 ]]; then
    echo -e "${GREEN}‚úÖ WORKING${NC}"
else
    echo -e "${RED}‚ùå NO RESPONSE${NC}"
    exit 1
fi

# –§—ñ–Ω–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
echo ""
echo -e "${BOLD}üéâ === WINDSURF AI INTEGRATION READY ===${NC}"
echo ""
echo -e "${GREEN}‚úÖ HTTP Server:${NC} http://localhost:8001"
echo -e "${GREEN}‚úÖ Providers:${NC} 6 (windsurf, openai, anthropic, google, xai, deepseek)"
echo -e "${GREEN}‚úÖ Models:${NC} 11 total (3 free, 2 reasoning, 9 chat)"
echo -e "${GREEN}‚úÖ Status:${NC} Production Ready"
echo ""

echo -e "${BOLD}üìã Quick API Examples:${NC}"
echo ""
echo -e "${BLUE}# List all providers:${NC}"
echo "curl -X POST http://localhost:8001/mcp/call-tool \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{\"tool\": \"list_ai_providers\", \"params\": {}}'"
echo ""

echo -e "${BLUE}# Chat with free Windsurf model:${NC}"
echo "curl -X POST http://localhost:8001/mcp/call-tool \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"tool\": \"ai_chat_completion\","
echo "    \"params\": {"
echo "      \"messages\": [{\"role\": \"user\", \"content\": \"Hello!\"}],"
echo "      \"provider\": \"windsurf\","
echo "      \"model\": \"windsurf-swe-1\""
echo "    }"
echo "  }'"
echo ""

echo -e "${BOLD}üìÅ Integration Files:${NC}"
echo -e "${YELLOW}Backend:${NC} .windsurf/server/src/windsurf-ai-provider.ts"
echo -e "${YELLOW}Frontend:${NC} frontend/src/services/windsurfExactModels.js"
echo -e "${YELLOW}React:${NC} frontend/src/components/WindsurfModelsShowcase.jsx"
echo -e "${YELLOW}Demo:${NC} .windsurf/server/final-exact-verification.js"
echo ""

echo -e "${BOLD}üöÄ Ready for VentAI integration!${NC}"
echo ""
