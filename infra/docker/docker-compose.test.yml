version: '3.8'

services:
  # Frontend for testing
  frontend:
    build:
      context: ../
      dockerfile: frontend/Dockerfile.dev
    environment:
      - NODE_ENV=test
      - REACT_APP_API_URL=http://backend:8000
      - CI=true
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - test-network
    command: npm run test:ci

  # Backend for testing
  backend:
    build:
      context: ../
      dockerfile: backend/Dockerfile.dev
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://test_user:test_password@test-db:5432/test_db
      - REDIS_URL=redis://test-redis:6379
      - PYTHONPATH=/app/src
    volumes:
      - ../backend:/app
      - test_uploads:/app/uploads
    networks:
      - test-network
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    command: ["python", "-m", "pytest", "-v", "--tb=short", "--maxfail=1"]

  # Test Database
  test-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
    ports:
      - "5434:5432"
    volumes:
      - test_db_data:/var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Redis
  test-redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    volumes:
      - test_redis_data:/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test runner for E2E tests
  e2e-tests:
    build:
      context: ../
      dockerfile: tests/e2e/Dockerfile
    environment:
      - FRONTEND_URL=http://frontend:3000
      - BACKEND_URL=http://backend:8000
    volumes:
      - ../tests:/app/tests
      - e2e_reports:/app/reports
    networks:
      - test-network
    depends_on:
      - frontend
      - backend
    profiles:
      - e2e

networks:
  test-network:
    driver: bridge

volumes:
  test_db_data:
  test_redis_data:
  test_uploads:
  e2e_reports:
