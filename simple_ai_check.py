#!/usr/bin/env python3
"""
–°–ø—Ä–æ—â–µ–Ω–∏–π —Ç–µ—Å—Ç —ñ—Å–Ω—É–≤–∞–Ω–Ω—è AI —Ñ–∞–π–ª—ñ–≤
"""

import sys
from pathlib import Path

def test_files():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö AI —Ñ–∞–π–ª—ñ–≤"""
    print("üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ AI —Ñ–∞–π–ª—ñ–≤...")
    
    base_path = Path(__file__).parent
    
    # Backend —Ñ–∞–π–ª–∏
    backend_files = [
        "backend/mcp_ai_providers.py",
        "backend/api_routes.py", 
        "backend/main.py"
    ]
    
    # Frontend AI —Ñ–∞–π–ª–∏
    frontend_files = [
        "frontend/src/services/aiService.js",
        "frontend/src/components/ai/AIEnhancedCalculator.jsx",
        "frontend/src/components/ai/SimpleAIWrapper.jsx",
        "frontend/src/components/ai/AIComponents.css",
        "frontend/src/hooks/useAICalculator.js"
    ]
    
    # –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∏
    calculator_files = [
        "frontend/src/pages/DuctAreaCalculator.js",
        "frontend/src/pages/AirExchangeCalculator.js",
        "frontend/src/pages/DuctSizingCalculator.js", 
        "frontend/src/pages/PressureDropCalculator.js",
        "frontend/src/pages/AcousticCalculator.js",
        "frontend/src/pages/WaterHeaterCalculator.js",
        "frontend/src/pages/SmokeRemovalCalculator.js"
    ]
    
    all_files = backend_files + frontend_files + calculator_files
    
    missing_files = []
    
    for file_path in all_files:
        full_path = base_path / file_path
        if full_path.exists():
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path}")
            missing_files.append(file_path)
    
    return missing_files

def main():
    print("üöÄ –ü–ï–†–ï–í–Ü–†–ö–ê AI –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á VENTAI")
    print("=" * 40)
    
    missing = test_files()
    
    if not missing:
        print("\nüéâ –í—Å—ñ —Ñ–∞–π–ª–∏ AI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –ø—Ä–∏—Å—É—Ç–Ω—ñ!")
        print("‚ú® VentAI —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è")
        
        # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ AI —ñ–º–ø–æ—Ä—Ç—ñ–≤ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞—Ö
        print("\nüîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ AI —ñ–º–ø–æ—Ä—Ç—ñ–≤ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞—Ö...")
        check_ai_imports()
        
    else:
        print(f"\n‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ —Ñ–∞–π–ª–∏: {len(missing)}")
        for file in missing:
            print(f"  - {file}")

def check_ai_imports():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î AI —ñ–º–ø–æ—Ä—Ç–∏ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞—Ö"""
    base_path = Path(__file__).parent
    pages_path = base_path / "frontend" / "src" / "pages"
    
    calculators = [
        "DuctAreaCalculator.js",
        "AirExchangeCalculator.js",
        "DuctSizingCalculator.js",
        "PressureDropCalculator.js", 
        "AcousticCalculator.js",
        "WaterHeaterCalculator.js",
        "SmokeRemovalCalculator.js"
    ]
    
    for calc in calculators:
        calc_path = pages_path / calc
        if calc_path.exists():
            try:
                content = calc_path.read_text(encoding='utf-8')
                has_ai = "SimpleAIWrapper" in content or "AIEnhancedCalculator" in content
                print(f"{'‚úÖ' if has_ai else '‚ùå'} {calc} - AI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è: {'–¢–∞–∫' if has_ai else '–ù—ñ'}")
            except Exception as e:
                print(f"‚ö†Ô∏è  {calc} - –ø–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è: {e}")

if __name__ == "__main__":
    main()
