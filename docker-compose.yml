
services:
  postgres:
    image: postgres:15-alpine
    container_name: ventai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ventai
      POSTGRES_PASSWORD: ventai123
      POSTGRES_DB: ventai_db
      LANG: en_US.utf8
      LC_ALL: en_US.utf8
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ventai -d ventai_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ventai-network

  redis:
    image: redis:7-alpine
    container_name: ventai-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ventai-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ventai-backend:latest
    container_name: ventai-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://ventai:ventai123@postgres:5432/ventai_db
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: production
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: ["/opt/venv/bin/python", "src/fastapi_app/main.py"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8000/docs || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ventai-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ventai-frontend:latest
    container_name: ventai-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: http://backend:8000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ventai-network

volumes:
  postgres_data:
    name: ventai_postgres_data
  redis_data:
    name: ventai_redis_data

networks:
  ventai-network:
    name: ventai-network
    driver: bridge
