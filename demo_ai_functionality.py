#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π —Ç–µ—Å—Ç AI —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ VentAI
–ü–æ–∫–∞–∑—É—î —Ä–æ–±–æ—Ç—É —Ä—ñ–∑–Ω–∏—Ö AI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –±–µ–∑ –ø–æ—Ç—Ä–µ–±–∏ –≤ API –∫–ª—é—á–∞—Ö
"""

import json
import time
from datetime import datetime

def demo_ai_analysis():
    """–î–µ–º–æ –∞–Ω–∞–ª—ñ–∑—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞"""
    print("ü§ñ –î–ï–ú–û: AI –ê–Ω–∞–ª—ñ–∑ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞")
    print("-" * 40)
    
    # –°–∏–º—É–ª—è—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    input_data = {
        "room_length": 8.0,
        "room_width": 6.0, 
        "room_height": 3.0,
        "air_change_rate": 5
    }
    
    results = {
        "room_volume": 144.0,
        "required_airflow": 720.0,
        "duct_diameter": 200
    }
    
    print(f"üìä –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ: {json.dumps(input_data, indent=2)}")
    print(f"üìà –†–µ–∑—É–ª—å—Ç–∞—Ç–∏: {json.dumps(results, indent=2)}")
    
    # –°–∏–º—É–ª—è—Ü—ñ—è AI –∞–Ω–∞–ª—ñ–∑—É
    ai_analysis = """
    ‚úÖ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ
    üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:
    - –†–æ–∑–º—ñ—Ä –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è: 144 –º¬≥ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –æ—Ñ—ñ—Å)
    - –ö—Ä–∞—Ç–Ω—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä–æ–æ–±–º—ñ–Ω—É 5 –≥–æ–¥‚Åª¬π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –æ—Ñ—ñ—Å–Ω–∏–º –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è–º
    - –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏–π –¥—ñ–∞–º–µ—Ç—Ä –ø–æ–≤—ñ—Ç—Ä–æ–≤–æ–¥—É: 200–º–º –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π
    - –®–≤–∏–¥–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è: ~6.4 –º/—Å (–≤ –º–µ–∂–∞—Ö –Ω–æ—Ä–º–∏)
    
    üîß –¢–µ—Ö–Ω—ñ—á–Ω—ñ –ø–æ—Ä–∞–¥–∏:
    - –†–æ–∑–≥–ª—è–Ω—å—Ç–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≥–ª—É—à–Ω–∏–∫–∞ –ø—Ä–∏ —Ç–∞–∫—ñ–π —à–≤–∏–¥–∫–æ—Å—Ç—ñ
    - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å —É –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—ñ —Ç–µ–ø–ª–æ—ñ–∑–æ–ª—è—Ü—ñ—ó
    """
    
    print(f"üß† AI –ê–Ω–∞–ª—ñ–∑:")
    print(ai_analysis)
    
    return True

def demo_price_optimization():
    """–î–µ–º–æ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó —Ü—ñ–Ω"""
    print("\nüí∞ –î–ï–ú–û: –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –¶—ñ–Ω –ú–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤")
    print("-" * 40)
    
    # –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–ø–∏—Ç—É –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
    material_request = {
        "material_type": "steel_duct",
        "diameter": 200,
        "length": 50,
        "current_supplier": "Supplier A",
        "current_price": 75.50
    }
    
    print(f"üõí –ó–∞–ø–∏—Ç: {json.dumps(material_request, indent=2)}")
    
    # –°–∏–º—É–ª—è—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
    optimization_result = {
        "savings_found": True,
        "potential_savings": 12.30,
        "alternative_suppliers": [
            {
                "name": "Supplier B",
                "price": 68.20,
                "delivery": "2-3 –¥–Ω—ñ",
                "rating": 4.8
            },
            {
                "name": "Supplier C", 
                "price": 71.40,
                "delivery": "1-2 –¥–Ω—ñ",
                "rating": 4.6
            }
        ],
        "material_alternatives": [
            {
                "type": "galvanized_steel",
                "price": 63.20,
                "pros": ["–î–æ–≤–≥–æ–≤—ñ—á–Ω—ñ—Å—Ç—å", "–ö–æ—Ä–æ–∑—ñ–π–Ω–∞ —Å—Ç—ñ–π–∫—ñ—Å—Ç—å"],
                "cons": ["–í–∏—â–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –º–æ–Ω—Ç–∞–∂—É"]
            }
        ]
    }
    
    print(f"üí° –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó:")
    print(f"  üéØ –ú–æ–∂–ª–∏–≤–∞ –µ–∫–æ–Ω–æ–º—ñ—è: {optimization_result['potential_savings']} –≥—Ä–Ω")
    print(f"  üè™ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏: {len(optimization_result['alternative_suppliers'])}")
    print(f"  üîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏: {len(optimization_result['material_alternatives'])}")
    
    for supplier in optimization_result['alternative_suppliers']:
        savings = material_request['current_price'] - supplier['price']
        print(f"    ‚Ä¢ {supplier['name']}: {supplier['price']} –≥—Ä–Ω (-{savings:.2f} –≥—Ä–Ω)")
    
    return True

def demo_project_analysis():
    """–î–µ–º–æ –∞–Ω–∞–ª—ñ–∑—É –ø—Ä–æ–µ–∫—Ç—É"""
    print("\nüìä –î–ï–ú–û: –ê–Ω–∞–ª—ñ–∑ –ü—Ä–æ–µ–∫—Ç—É")
    print("-" * 40)
    
    project_data = {
        "name": "–û—Ñ—ñ—Å–Ω–∏–π —Ü–µ–Ω—Ç—Ä - 5 –ø–æ–≤–µ—Ä—Ö",
        "total_area": 1200,
        "rooms": 24,
        "total_airflow": 8500,
        "estimated_cost": 45000
    }
    
    print(f"üè¢ –ü—Ä–æ–µ–∫—Ç: {json.dumps(project_data, indent=2)}")
    
    analysis = """
    üìà –ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–µ–∫—Ç—É:
    ‚úÖ –ú–∞—Å—à—Ç–∞–±: –°–µ—Ä–µ–¥–Ω—ñ–π –æ—Ñ—ñ—Å–Ω–∏–π –ø—Ä–æ–µ–∫—Ç
    ‚úÖ –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: –í–∏—Å–æ–∫–∏–π —Ä—ñ–≤–µ–Ω—å (7.1 –º¬≥/–≥–æ–¥ –Ω–∞ –º¬≤)
    ‚úÖ –í–∞—Ä—Ç—ñ—Å—Ç—å: –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞ (37.5 –≥—Ä–Ω/–º¬≤)
    
    üîç –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑ –∞–Ω–∞–ª–æ–≥–∞–º–∏:
    ‚Ä¢ –°–µ—Ä–µ–¥–Ω—è –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ —Ä–∏–Ω–∫—É: 42 –≥—Ä–Ω/–º¬≤
    ‚Ä¢ –í–∞—à –ø—Ä–æ–µ–∫—Ç –µ–∫–æ–Ω–æ–º–Ω—ñ—à–∏–π –Ω–∞ 10.7%
    ‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ—ó –Ω–∞ 15%
    
    üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:
    ‚Ä¢ –†–æ–∑–≥–ª—è–Ω—å—Ç–µ –∑–æ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ—ó –µ–Ω–µ—Ä–≥—ñ—ó
    ‚Ä¢ –î–æ–¥–∞–π—Ç–µ —Ä–µ–∫—É–ø–µ—Ä–∞—Ü—ñ—é —Ç–µ–ø–ª–∞ (–æ–∫—É–ø–Ω—ñ—Å—Ç—å 2.5 —Ä–æ–∫–∏)
    ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó –ø—ñ–¥–≤–∏—â–∏—Ç—å –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –Ω–∞ 20%
    """
    
    print(analysis)
    return True

def demo_ai_chat():
    """–î–µ–º–æ AI —á–∞—Ç –ø–æ–º—ñ—á–Ω–∏–∫–∞"""
    print("\nüí¨ –î–ï–ú–û: AI –ß–∞—Ç –ü–æ–º—ñ—á–Ω–∏–∫")
    print("-" * 40)
    
    conversation = [
        {
            "user": "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ –¥—ñ–∞–º–µ—Ç—Ä –ø–æ–≤—ñ—Ç—Ä–æ–≤–æ–¥—É –¥–ª—è –∫–∞—Ñ–µ –Ω–∞ 50 –º—ñ—Å—Ü—å?",
            "ai": "–î–ª—è –∫–∞—Ñ–µ –Ω–∞ 50 –º—ñ—Å—Ü—å —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n\nüîπ –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ –≤–∏—Ç—Ä–∞—Ç–∞: 50 √ó 30 –º¬≥/–≥–æ–¥ = 1500 –º¬≥/–≥–æ–¥\nüîπ –û—Å–Ω–æ–≤–Ω–∏–π –ø–æ–≤—ñ—Ç—Ä–æ–≤–æ–¥: √ò250-300–º–º\nüîπ –í—ñ–¥–≥–∞–ª—É–∂–µ–Ω–Ω—è –¥–æ —Å—Ç–æ–ª–∏–∫—ñ–≤: √ò160-200–º–º\nüîπ –í–∏—Ç—è–∂–∫–∞ –∑ –∫—É—Ö–Ω—ñ: –æ–∫—Ä–µ–º–∞ —Å–∏—Å—Ç–µ–º–∞ –∑ √ò315–º–º\n\nüí° –í—Ä–∞—Ö—É–π—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ 20% –Ω–∞ –ø—ñ–∫–æ–≤—ñ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è!"
        },
        {
            "user": "–ê —â–æ –∑ –∞–∫—É—Å—Ç–∏–∫–æ—é? –ì–æ—Å—Ç—ñ —Å–∫–∞—Ä–∂–∏—Ç–∏–º—É—Ç—å—Å—è –Ω–∞ —à—É–º?",
            "ai": "–í—ñ–¥–º—ñ–Ω–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è! –î–ª—è –∫–∞—Ñ–µ –∞–∫—É—Å—Ç–∏–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞:\n\nüîá –†–µ–∫–æ–º–µ–Ω–¥—É—é:\n‚Ä¢ –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤ –ø–æ–≤—ñ—Ç—Ä–æ–≤–æ–¥–∞—Ö ‚â§ 4 –º/—Å\n‚Ä¢ –ì–ª—É—à–Ω–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –º–∞–≥—ñ—Å—Ç—Ä–∞–ª—è—Ö\n‚Ä¢ –ú'—è–∫—ñ –ø–æ–≤–æ—Ä–æ—Ç–∏ –∑–∞–º—ñ—Å—Ç—å –≥–æ—Å—Ç—Ä–∏—Ö –∫—É—Ç—ñ–≤\n‚Ä¢ –í—ñ–±—Ä–æ—ñ–∑–æ–ª—è—Ü—ñ—è –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ñ–≤\n\nüìä –¶—ñ–ª—å–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å —à—É–º—É: ‚â§ 45 –¥–ë –≤ –∑–∞–ª—ñ"
        }
    ]
    
    for exchange in conversation:
        print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {exchange['user']}")
        time.sleep(0.5)
        print(f"ü§ñ AI –ü–æ–º—ñ—á–Ω–∏–∫: {exchange['ai']}")
        print()
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ –¥–µ–º–æ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø AI –§–£–ù–ö–¶–Ü–û–ù–ê–õ–¨–ù–û–°–¢–Ü VENTAI")
    print("=" * 50)
    print(f"‚è∞ –ß–∞—Å: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("üéØ –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–±–æ—Ç—É AI –±–µ–∑ API –∫–ª—é—á—ñ–≤\n")
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –¥–µ–º–æ
    demos = [
        demo_ai_analysis,
        demo_price_optimization, 
        demo_project_analysis,
        demo_ai_chat
    ]
    
    for demo in demos:
        if demo():
            print("‚úÖ –î–µ–º–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –¥–µ–º–æ\n")
    
    print("üéâ –í–°–Ü –î–ï–ú–û –ó–ê–í–ï–†–®–ï–ù–Ü –£–°–ü–Ü–®–ù–û!")
    print("\nüìã –ü—ñ–¥—Å—É–º–æ–∫ AI –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π:")
    print("  ü§ñ –†–æ–∑—É–º–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤")
    print("  üí∞ –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ü—ñ–Ω —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤") 
    print("  üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –ø—Ä–æ–µ–∫—Ç—ñ–≤")
    print("  üí¨ –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π AI –ø–æ–º—ñ—á–Ω–∏–∫")
    print("  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö")
    print("  üìà –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ä–∏–Ω–∫–æ–≤–∏—Ö —Ç–µ–Ω–¥–µ–Ω—Ü—ñ–π")
    
    print(f"\nüåü VentAI —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ –ø–æ–≤–Ω–æ—é AI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é!")

if __name__ == "__main__":
    main()
